syntax = "proto3";
package POGOProtos.Settings;


message DownloadSettingsAction {
	string hash = 1;
}
message EventSettings {
	repeated string condolence_ribbon_country = 1;
}
message FestivalSettings {
	FestivalType festival_type = 1;
	string key = 2;
	string vector = 3;

	enum FestivalType {
		NONE = 0;
		HALLOWEEN = 1;
		HOLIDAY = 2;
	}
}
message FortSettings {
	double interaction_range_meters = 1;
	int32 max_total_deployed_pokemon = 2;
	int32 max_player_deployed_pokemon = 3;
	double deploy_stamina_multiplier = 4;
	double deploy_attack_multiplier = 5;
	double far_interaction_range_meters = 6;
}
message GlobalSettings {
	.POGOProtos.Settings.FortSettings fort_settings = 2;
	.POGOProtos.Settings.MapSettings map_settings = 3;
	.POGOProtos.Settings.LevelSettings level_settings = 4;
	.POGOProtos.Settings.InventorySettings inventory_settings = 5;
	string minimum_client_version = 6;
	.POGOProtos.Settings.GpsSettings gps_settings = 7;
	.POGOProtos.Settings.FestivalSettings festival_settings = 8;
	.POGOProtos.Settings.EventSettings event_settings = 9;
	int32 max_pokemon_types = 10;
	.POGOProtos.Settings.SfidaSettings sfida_settings = 11;
}
message GpsSettings {
	float driving_warning_speed_meters_per_second = 1;
	float driving_warning_cooldown_minutes = 2;
	float driving_speed_sample_interval_seconds = 3;
	int32 driving_speed_sample_count = 4;
}
message InventorySettings {
	int32 max_pokemon = 1;
	int32 max_bag_items = 2;
	int32 base_pokemon = 3;
	int32 base_bag_items = 4;
	int32 base_eggs = 5;
}
message LevelSettings {
	double trainer_cp_modifier = 2;
	double trainer_difficulty_modifier = 3;
}
message MapSettings {
	double pokemon_visible_range = 1;
	double poke_nav_range_meters = 2;
	double encounter_range_meters = 3;
	float get_map_objects_min_refresh_seconds = 4;
	float get_map_objects_max_refresh_seconds = 5;
	float get_map_objects_min_distance_meters = 6;
	string google_maps_api_key = 7;
	int32 min_nearby_hide_sightings = 8;
}
message SfidaSettings {
	float low_battery_threshold = 1;
}
